{"ast":null,"code":"import axios from \"axios\";\nlet accessToken = \"\";\nexport function Sign(nev, email, password) {\n  return axios.post(\" \", {\n    nev,\n    email,\n    password\n  }, {\n    withCredentials: true\n  }).then(res => {\n    accessToken = res.data.accessToken;\n  });\n}\n_c = Sign;\nexport const fetchHitelesitessel = axios.create();\nfetchHitelesitessel.interceptors.request.use(config => {\n  if (!accessToken) {\n    return config;\n  }\n  return {\n    ...config,\n    headers: {\n      ...config.headers,\n      Authorization: `Bearer ${accessToken}`\n    }\n  };\n}, error => Promise.reject(error));\nfetchHitelesitessel.interceptors.response.use(response => response, error => {\n  if (error.response.status !== 403) {\n    return Promise.reject(error);\n  }\n  const originalRequest = error.config;\n  if (originalRequest.isRetry) {\n    return Promise.reject(error);\n  }\n  originalRequest.isRetry = true;\n  return axios.get(\"\", {\n    withCredentials: true\n  }).then(res => {\n    accessToken = res.data.accessToken;\n  }).then(() => fetchHitelesitessel(originalRequest));\n});\nvar _c;\n$RefreshReg$(_c, \"Sign\");","map":{"version":3,"names":["axios","accessToken","Sign","nev","email","password","post","withCredentials","then","res","data","_c","fetchHitelesitessel","create","interceptors","request","use","config","headers","Authorization","error","Promise","reject","response","status","originalRequest","isRetry","get","$RefreshReg$"],"sources":["C:/Users/x/Documents/zsombor3/EtelRendelo/rendelo/src/Komponensek/Oldalak/AuthService.js"],"sourcesContent":["import axios from \"axios\";\n\nlet accessToken = \"\";\n\nexport function Sign( nev,  email, password) {\n    return axios.post(\" \", {nev, email, password }, \n    { withCredentials: true })\n    .then((res) => {\n        accessToken = res.data.accessToken;\n    });    \n}\n\nexport const fetchHitelesitessel = axios.create();\nfetchHitelesitessel.interceptors.request.use(\n    (config) => {\n        if(!accessToken) {\n            return config;\n        }\n        return {\n            ...config,\n            headers: {\n                ...config.headers,\n                Authorization: `Bearer ${accessToken}`\n            }\n        };\n    },\n    (error) => Promise.reject(error)\n);\nfetchHitelesitessel.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if(error.response.status !== 403) {\n            return Promise.reject(error);\n        }\n        const originalRequest = error.config;\n        if(originalRequest.isRetry) {\n            return Promise.reject(error);\n        }\n        originalRequest.isRetry = true;\n        return axios.get(\"\", \n        { withCredentials: true })\n        .then((res) => {\n            accessToken = res.data.accessToken;\n        })\n        .then(() =>  fetchHitelesitessel(originalRequest));\n    }\n);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAIC,WAAW,GAAG,EAAE;AAEpB,OAAO,SAASC,IAAIA,CAAEC,GAAG,EAAGC,KAAK,EAAEC,QAAQ,EAAE;EACzC,OAAOL,KAAK,CAACM,IAAI,CAAC,GAAG,EAAE;IAACH,GAAG;IAAEC,KAAK;IAAEC;EAAS,CAAC,EAC9C;IAAEE,eAAe,EAAE;EAAK,CAAC,CAAC,CACzBC,IAAI,CAAEC,GAAG,IAAK;IACXR,WAAW,GAAGQ,GAAG,CAACC,IAAI,CAACT,WAAW;EACtC,CAAC,CAAC;AACN;AAACU,EAAA,GANeT,IAAI;AAQpB,OAAO,MAAMU,mBAAmB,GAAGZ,KAAK,CAACa,MAAM,CAAC,CAAC;AACjDD,mBAAmB,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CACvCC,MAAM,IAAK;EACR,IAAG,CAAChB,WAAW,EAAE;IACb,OAAOgB,MAAM;EACjB;EACA,OAAO;IACH,GAAGA,MAAM;IACTC,OAAO,EAAE;MACL,GAAGD,MAAM,CAACC,OAAO;MACjBC,aAAa,EAAG,UAASlB,WAAY;IACzC;EACJ,CAAC;AACL,CAAC,EACAmB,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACnC,CAAC;AACDR,mBAAmB,CAACE,YAAY,CAACS,QAAQ,CAACP,GAAG,CACxCO,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACP,IAAGA,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IAC9B,OAAOH,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAChC;EACA,MAAMK,eAAe,GAAGL,KAAK,CAACH,MAAM;EACpC,IAAGQ,eAAe,CAACC,OAAO,EAAE;IACxB,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAChC;EACAK,eAAe,CAACC,OAAO,GAAG,IAAI;EAC9B,OAAO1B,KAAK,CAAC2B,GAAG,CAAC,EAAE,EACnB;IAAEpB,eAAe,EAAE;EAAK,CAAC,CAAC,CACzBC,IAAI,CAAEC,GAAG,IAAK;IACXR,WAAW,GAAGQ,GAAG,CAACC,IAAI,CAACT,WAAW;EACtC,CAAC,CAAC,CACDO,IAAI,CAAC,MAAOI,mBAAmB,CAACa,eAAe,CAAC,CAAC;AACtD,CACJ,CAAC;AAAC,IAAAd,EAAA;AAAAiB,YAAA,CAAAjB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}